#!/usr/bin/env Rscript
# | Extract work-hours related to a certain project or porjects
require('getopt', quietly = TRUE)
opt_spec <- matrix(c(
   'help'   , 'h', 0, "logical"  , "Getting help"
  , 'dir'   , 'd', 1, "character", "Directory to look for wdlog-files"
  , 'pattern', 'p', 1, "character", "Pattern to match against Projects"
  , 'from'   , 'f', 1, "character", "Starting Time"
  , 'to'     , 't', 1, "character", "Ending Time"
  , 'format' , 'm', 1, "character", "Time format (default: '%Y-%m-%d')"
  , 'subject', 's', 0, "logical"  , "Should the subjects be appended"
  , 'sum',     'a', 0, "logical"  , "Should categrories be summed up; only if --subject"
  , 'sumunit', 'u', 1, 'character', 'summing unit ("total", "month", "week"; default "total")'
   ), ncol = 5, byrow = TRUE)

# Process command-line arguments
opt <- getopt(spec = opt_spec)
if ( !is.null(opt$help) || length(commandArgs(trailingOnly = TRUE)) == 0 )
{
    cat(getopt(spec = opt_spec, usage = TRUE, command = "extractProjectHours"))
    q(status=0)
}
##opt<- list(
##    pattern = "Biel"
##   ,dir = "~/logbuch"
##   ,from = "2015-05-01"
##   ,to = "2015-07-07"
##   ,subject = TRUE
##   ,sum = TRUE
##   ,sumunit = "week"
##)

if (is.null(opt$format)) opt$format <- '%Y-%m-%d'
if (is.null(opt$dir)) opt$dir <- '.'
if (is.null(opt$from)) stop("Please specify time when to start looking")
if (is.null(opt$to)) opt$to <- format(Sys.time(), "%Y-%m-%d")
if (is.null(opt$subject)) opt$subject <- FALSE
if (is.null(opt$sum)) opt$sum <- FALSE
if (is.null(opt$sumunit)) opt$sumunit <- "total"

require("logbuch", quietly = TRUE)
wdf <-
  selectWdFiles(
    list.wdfiles(opt$dir)
   ,as.POSIXct(opt$from)
   ,as.POSIXct(opt$to)
    )

if (opt$subject)
{
  dd <-
    do.call(rbind
           ,lapply(wdf, function(f)
             {
               dd <- readDayFile(f, subProj = TRUE)
               i <-
               {
                 if (!is.null(opt$pattern))
                   grep(opt$pattern,dd$Proj)
                 else
                   seq_len(nrow(dd))
               }
               if (length(i) == 0)
                 NULL
               else
                 cbind(dd[i,]
                     , Date = as.POSIXct(sub("\\.wdlog", "", basename(f))))
             }
                   )
            )
  odf <-
  {
    if (opt$sum && opt$subject)
      {
        switch(
          opt$sumunit
         ,'total' = 
                   aggregate(Time ~ Proj + SubProj 
                            ,data = dd
                            ,sum)
         ,'month' =
                   aggregate(Time ~ Proj + SubProj + Month 
                            ,data = transform(dd, Month =  format(Date, "%Y-%m"))
                            ,sum)
         ,'week' =
          {
            odf. <-
              cbind(
                aggregate(Time ~ Week + Proj + SubProj
                         ,data = transform(dd, Week =  format(Date, "%Y-%V"))
                         ,sum)
               ,Desc = 
                  aggregate(Desc ~ Week + Proj + SubProj
                           ,data = transform(dd, Week =  format(Date, "%Y-%V"))
                           ,function(x) paste(unique(x), collapse = ","))[,4] 
              )
            odf.[order(odf.$Week, odf.$Proj, odf.$SubProj),]
          }
          ,stop('Valid summing units are "total", "month", "week"')
        )
      }
    else
      dd
  }
  write.table(odf ,quote = FALSE, sep = ";", row.names = FALSE)
} else
  {
    sm <- summarizeWdFiles(wdf)
    i <- grep(opt$pattern, names(sm))
    if (!is.null(opt$subject) && length(i) > 1)
      error("When printing subjects, there could only be one project selected")
    sm.list <-
      apply(
        sm, 1, function (r) {if (all(sapply(r[i], function(x) x == 0))) NULL else r[i]}
        )
    sm.df <- do.call(rbind, sm.list[!sapply(sm.list, is.null)])
    print(sm.df)
  }

q(status = 0)
