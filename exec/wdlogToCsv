#!/usr/bin/env Rscript
# | Looks recursively for .wdlog-files and converts them to csv (stdout)
## * Command-line parsing
require('getopt', quietly = TRUE)
opt_spec <- matrix(c(
     'help'      ,'h', 0, "logical"  , "Getting help"
    ,'dir'       ,'d', 1, "character", "Directory to look for wdlog-files"
    ,'worker'    ,'w', 1, "character", "Optional name of worker; added as column"
    ,'projconf'  ,'p', 1, "character", "Optional filepath to project-configuration"
   )       , ncol = 5    , byrow = TRUE)

# Process command-line arguments
opt <- getopt(spec = opt_spec)
if ( !is.null(opt$help) || length(commandArgs(trailingOnly = TRUE)) == 0 )
{
    message(
        "Program to look recursively for .wdlog-files and ",
        "convert them to csv (stdout)\n\n")
    cat(getopt(spec = opt_spec, usage = TRUE, command = "wdlogToCsv"))
    q(status=0)
}
require('logbuch', quietly = TRUE)
require('reshape2', quietly = TRUE)
require('yaml',  quietly = TRUE)

projConf <-           # project-configuration (mapping name to number)
{
    if (!is.null(opt$projconf))
        readProjConf(opt$projconf)
    else
        NULL
}

fs <-
    list.files(opt$dir, SFP, recursive = TRUE, full.names = TRUE)
dd <- readWdlogFiles(fs)

odd. <-                                  # output-table
    cbind(
        Worker = {if (!is.null(opt$worker)) opt$worker else NA}
       ,dd)
odd <-
{
    if (!is.null(opt$projconf))
        lookupProjects(odd., projConf)
    else
        odd.
}
# TODO: mapping project-name to number
write.table(
    odd,
    col.names = FALSE, row.names = FALSE, quote = FALSE,
    sep = ";", na = "")
